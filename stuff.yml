---
- name: AWS role
  ansible.builtin.import_role:
    name: inqwise.common.aws
  vars:
    dns_record_list:
    - name: "{{ private_dns }}.{{ private_domain }}"
      zone: "{{ private_domain }}"
      type: A
      value: "{{ private_ip }}"
      private: true
      ttl: 120
    tags_facts:
      private_dns: "private_dns"

- name: Loki role
  ansible.builtin.import_role:
    name: inqwise.stacktrek.loki
  vars:
    loki_server:
      http_listen_port: 3100

    loki_common:
      ring:
        instance_addr: 127.0.0.1
        kvstore:
          store: inmemory
      replication_factor: 1
      path_prefix: /tmp/loki

    loki_ingester:
      lifecycler:
        address: 127.0.0.1  # Replace with your Loki instance's IP if different
        port: 9095  # The port where the ingester is listening; default is 9095
        ring:
          replication_factor: 1
        final_sleep: 0s
      chunk_idle_period: 5m
      chunk_retain_period: 30s

    loki_schema_config:
      configs:
        - from: 2020-05-15
          store: tsdb
          object_store: s3
          schema: v13
          index:
            prefix: index_
            period: 24h

    loki_storage_config:
      aws:
        s3: "{{ s3_loki }}"
      tsdb_shipper:
        active_index_directory: tmp/loki/index
        cache_location: tmp/loki/index_cache

    loki_limits_config:
      reject_old_samples: true
      reject_old_samples_max_age: 168h
      allow_structured_metadata: false
      volume_enabled: true

    loki_table_manager:
      retention_deletes_enabled: true
      retention_period: 336h

    loki_compactor:
      working_directory: /tmp/loki/compactor
      compaction_interval: 1h


- name: Install Alloy
  ansible.builtin.include_role:
    name: inqwise.common.alloy
  tags: always
  vars:
    alloy_user_groups:
      - systemd-journal
    env_file_vars:
      CUSTOM_ARGS: "--server.http.listen-addr=0.0.0.0:12345 --disable-reporting=true"
    config: |
      loki.write "local" {
        endpoint {
          url = "http://loki.{{ private_domain }}:3100/loki/api/v1/push"
        }
      }

      loki.relabel "journal" {
        forward_to = []

        rule {
          source_labels = ["__journal__systemd_unit"]
          regex         = "(loki.service|telegraf.service)"
          action        = "keep"
        }
        rule {
          source_labels = ["__journal__systemd_unit"]
          target_label  = "unit"
        }
        rule {
          source_labels = ["__journal__hostname"]
          target_label  = "instance"
        }
      }

      loki.source.journal "read" {
        forward_to = [
          loki.write.local.receiver,
        ]
        relabel_rules = loki.relabel.journal.rules
        labels = {
          "job" = "integrations/node_exporter",
          "app" = "loki",
        }
      }